---
import Layout from '@layouts/Layout.astro';
import { prisma } from '../../db';

export const prerender = false;

let errorMessage = "";
const { id } = Astro.params;

const [miembro, zonas] = await Promise.all([
  prisma.miembros.findUnique({
    where: { id: (id) },
  }),
  prisma.zonas.findMany({ orderBy: { nombre_zona: 'asc' } }),
]);

if (!miembro) {
  return Astro.redirect("/404");
}

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const nombre = data.get("nombre") as string;
    const apellido = data.get("apellido") as string;
    const cedula = data.get("cedula") as string;
    const direccion = data.get("direccion") as string;
    const telef = data.get("telef") as string;
    const telf_2 = data.get("telf_2") as string;
    const status = data.get("status") === "on";
    const zonaId = data.get("zonaId") as string;
    const kids = data.get("kids") === "on";

    if (!nombre || !apellido || !cedula || !zonaId) {
      throw new Error("Nombre, Apellido, Cédula y Zona son campos requeridos.");
    }

    const capitalize = (str: string) => {
      if (!str) return '';
      return str
        .split(' ')
        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())
        .join(' ');
    };

    await prisma.miembros.update({
      where: { id: id },
      data: {
        nombre: capitalize(nombre),
        apellido: capitalize(apellido),
        cedula,
        direccion,
        telef,
        telf_2,
        status,
        zona_id: zonaId,
        kids,
      },
    });
    return Astro.redirect("/listado");
  } catch (error) {
    console.error(error);
    errorMessage = `Error al actualizar el miembro: ${error.message}`;
  }
}
---

<Layout title={`Editar Miembro - ${miembro.nombre}`}>
  <div class="max-w-2xl mx-auto py-10">
    <h1 class="text-2xl font-bold mb-6 text-white text-center">Editar Miembro</h1>

    {errorMessage && (
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
        <strong class="font-bold">¡Error! </strong>
        <span class="block sm:inline">{errorMessage}</span>
      </div>
    )}

    <form method="POST" data-astro-reload class="space-y-6 bg-white p-8 rounded-lg shadow-md">
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label for="nombre" class="block text-sm font-medium text-gray-700">Nombre</label>
          <input type="text" name="nombre" id="nombre" value={miembro.nombre} required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
        </div>
        <div>
          <label for="apellido" class="block text-sm font-medium text-gray-700">Apellido</label>
          <input type="text" name="apellido" id="apellido" value={miembro.apellido} required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label for="cedula" class="block text-sm font-medium text-gray-700">Cédula</label>
          <input type="text" name="cedula" id="cedula" value={miembro.cedula} required class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
        </div>
        <div class="flex items-center mt-6">
          <input type="checkbox" name="kids" id="kids" checked={miembro.kids} class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
          <label for="kids" class="ml-2 block text-sm text-gray-900">Niño</label>
        </div>
      </div>

      <div>
        <label for="direccion" class="block text-sm font-medium text-gray-700">Dirección</label>
        <textarea name="direccion" id="direccion" rows="3" class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">{miembro.direccion}</textarea>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label for="telef" class="block text-sm font-medium text-gray-700">Teléfono</label>
          <input type="text" name="telef" id="telef" value={miembro.telef} class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
        </div>
        <div>
          <label for="telf_2" class="block text-sm font-medium text-gray-700">Teléfono 2 (Opcional)</label>
          <input type="text" name="telf_2" id="telf_2" value={miembro.telf_2} class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
        </div>
      </div>

      <div>
        <label for="zonaId" class="block text-sm font-medium text-gray-700">Zona</label>
        <select name="zonaId" id="zonaId" required class="mt-1 block w-full px-3 py-2 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500">
          {zonas.map(zona => (
            <option value={zona.id} selected={zona.id === miembro.zona_id}>{zona.nombre_zona}</option>
          ))}
        </select>
      </div>

      <div class="flex items-center">
        <input type="checkbox" name="status" id="status" checked={miembro.status} class="h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500">
        <label for="status" class="ml-2 block text-sm text-gray-900">Activo</label>
      </div>

      <div class="flex justify-end gap-4">
        <a href="/listado" class="py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">Cancelar</a>
        <button type="submit" class="py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700">Actualizar</button>
      </div>
    </form>
  </div>
</Layout>

<script>
  const kidsCheckbox = document.getElementById('kids') as HTMLInputElement;
  const cedulaInput = document.getElementById('cedula') as HTMLInputElement;

  kidsCheckbox.addEventListener('change', () => {
    if (kidsCheckbox.checked) {
      const randomNumber = Math.floor(1000 + Math.random() * 9000);
      cedulaInput.value = `kids-${randomNumber}`;
    } else {
      cedulaInput.value = '';
    }
  });
</script>